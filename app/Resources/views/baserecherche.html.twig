<!DOCTYPE html>
{% set locale = app.request.locale %}
<html lang="{{ locale }}" prefix="og: http://ogp.me/ns#">
    <head>

        <meta charset="UTF-8">
        <meta property="og:locale" content="{{ locale }}" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
        <title>Canhebergement | {% block title %}{% endblock %}</title>
        <meta charset="utf-8">
	<meta name="description" content="herbergement ">
	<meta name="author" content="nanotech-solutions">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- Favicon -->
	<link rel="shortcut icon" href="{{ asset('can/images/ch.ico') }}">

	<!--  CSS -->
	<link href="{{ asset('can/css/font-awesome.css') }}" rel="stylesheet">
	<link href="{{ asset('can/css/bootstrap.css') }}" rel="stylesheet">
	<link href="{{ asset('can/css/animations.css') }}" rel="stylesheet">
	<link href="{{ asset('can/css/bxslider.css') }}" rel="stylesheet">
	<link href="{{ asset('can/css/custom.css') }}" rel="stylesheet">
	<link rel="stylesheet" href="{{ asset('can/css/jquery-ui.min.css') }}" type="text/css" media="all" />
	<link rel="stylesheet" type="text/css" href="{{ asset('can/css/rangestyle.css') }}"/>
	<link rel="stylesheet" type="text/css" href="{{ asset('can/css/fotorama.css') }}"/>
	<link rel="stylesheet" type="text/css" href="{{ asset('can/css/datepicker/bootstrap-datepicker.css') }}"/>
       
</head>
<body>
    
{% include 'layoutrecherche/header.html.twig' %}
{% block body %}{% endblock %}
{{ render(controller('NanotechCanhebergementBundle:Default:footer'))}}

   <!-- codes js -->
<script type="text/javascript" src="{{ asset('can/js/jquery-3.3.1.min.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/jquery.velocity.min.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/mdb.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/popper.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/bootstrap.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/bxslider.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/jquery-ui.min.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/rangescriptFiltre.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/rangescriptet.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/custom.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/fotorama.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/datepicker/bootstrap-datepicker.min.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/datepicker/bootstrap-datepicker.fr.min.js') }}" ></script>


<script type="text/javascript">

    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();
        local = true;
        $("#latitude").val(place.geometry.location.lat());
        $("#longitude").val(place.geometry.location.lng());
		requette();

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.

    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDp0I07PNT-X6yOVeY5Hr9ri23MPwH13W8&libraries=places&callback=initAutocomplete"
		async defer></script>

<script async defer>

    $('#resultelement').append('<div class="spin pt-4 spin-cmt" style="margin: auto;"></div>');
    $('#resultelement').find('#row').remove();
    $.ajax({
        async: true,
        url: "{{ path('nanotech_canhebergement_result_recherche') }}",
        method: "GET",
        data:{
            categorie: $_GET('categorie'),
			latitude : $_GET('latitude') ,
			longitude: $_GET('longitude'),
			etoile:$_GET('etoile')
        },
        success:function(data){
            $('#resultelement').append(data);
            $('#resultelement').find('.spin-cmt').remove();

        },
        error:function (er) {

            console.log(er);
            $('#resultelement').append('<div id="row" class="row"><div class="col-md-12"><h5 class="h1-r" id="nom">Pas d\'hotel disponible</h5></div></div>');
            $('#resultelement').find('.spin-cmt').remove();
        }

    });


    $('#longitude').val($_GET('longitude'))
    $('#latitude').val($_GET('latitude'))
	if($_GET('direct')){
		local = true;
	}
    $('#autocomplete').val(decodeURIComponent($_GET('direct')))

    $('#flt-etl').val($_GET('etoile'))
    $('#fil-type').val($_GET('categorie'))

    function $_GET(param) {
        var vars = {};
        window.location.href.replace( location.hash, '' ).replace(
            /[?&]+([^=&]+)=?([^&]*)?/gi, // regexp
            function( m, key, value ) { // callback
                vars[key] = value !== undefined ? value : '';
            }
        );

        if ( param ) {
            return vars[param] ? vars[param] : null;
        }
        return vars;
    }
</script>

{% block script %}{% endblock %}
</body>
</html>
