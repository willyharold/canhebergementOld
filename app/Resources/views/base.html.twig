<!DOCTYPE html>
{% set locale = app.request.locale %}
<html lang="{{ locale }}" prefix="og: http://ogp.me/ns#">
    <head>

        <meta charset="UTF-8">
        <meta property="og:locale" content="{{ locale }}" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
        <title>Canhebergement | {% block title %}{% endblock %}</title>
        <meta charset="utf-8">
	<meta name="description" content="herbergement ">
	<meta name="author" content="nanotech-solutions">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- Favicon -->
	<link rel="shortcut icon" href="{{ asset('img/logo1.svg') }}">

	<!--  CSS -->
	<link href="{{ asset('can/css/font-awesome.css') }}" rel="stylesheet">
	<link href="{{ asset('can/css/bootstrap.css') }}" rel="stylesheet">
	<link href="{{ asset('can/css/animations.css') }}" rel="stylesheet">
	<link href="{{ asset('can/css/bxslider.css') }}" rel="stylesheet">
	<link href="{{ asset('can/css/custom.css') }}" rel="stylesheet">
	<link rel="stylesheet" href="{{ asset('can/css/jquery-ui.min.css') }}" type="text/css" media="all" />
	<link rel="stylesheet" type="text/css" href="{{ asset('can/css/rangestyle.css') }}"/>
        
</head>
<body>
    
{% include 'layout/header.html.twig' %}
{% block body %}{% endblock %}
{{ render(controller('NanotechCanhebergementBundle:Default:footer'))}}
   <!-- codes js -->
<script type="text/javascript" src="{{ asset('can/js/jquery-3.3.1.min.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/jquery.velocity.min.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/mdb.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/popper.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/bootstrap.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/bxslider.js') }}"></script>
<script type="text/javascript" src="{{ asset('can/js/jquery-ui.min.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/rangescript.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/rangescriptet.js') }}" ></script>
<script type="text/javascript" src="{{ asset('can/js/custom.js') }}" ></script>
{% block script %}
	<script>
        // This example displays an address form, using the autocomplete feature
        // of the Google Places API to help users fill in the information.

        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

        var placeSearch, autocomplete;
        var componentForm = {
            street_number: 'short_name',
            route: 'long_name',
            locality: 'long_name',
            administrative_area_level_1: 'short_name',
            country: 'long_name',
            postal_code: 'short_name'
        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
                {types: ['geocode']});

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();
            local = true;
            $("#latitude").val(place.geometry.location.lat());
            $("#longitude").val(place.geometry.location.lng());

            for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
        }

        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }


	</script>
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDp0I07PNT-X6yOVeY5Hr9ri23MPwH13W8&libraries=places&callback=initAutocomplete"
			async defer></script>
{% endblock %}

    
</body>
</html>
